## Ignore Visual Studio temporary files, build results, and 
2 ## files generated by popular Visual Studio add-ons. 
3 ## 
4 ## Get latest from httpsgithub.comgithubgitignoreblobmasterVisualStudio.gitignore 
5 
 
6 # User-specific files 
7 .rsuser 
8 .suo 
9 .user 
10 .userosscache 
11 .sln.docstates 
12 
 
13 # User-specific files (MonoDevelopXamarin Studio) 
14 .userprefs 
15 
 
16 # Mono auto generated files 
17 mono_crash. 
18 
 
19 # Build results 
20 [Dd]ebug 
21 [Dd]ebugPublic 
22 [Rr]elease 
23 [Rr]eleases 
24 x64 
25 x86 
26 [Aa][Rr][Mm] 
27 [Aa][Rr][Mm]64 
28 bld 
29 [Bb]in 
30 [Oo]bj 
31 [Ll]og 
32 
 
33 # Visual Studio 20152017 cacheoptions directory 
34 .vs 
35 # Uncomment if you have tasks that create the project's static files in wwwroot 
36 #wwwroot 
37 
 
38 # Visual Studio 2017 auto generated files 
39 Generated Files 
40 
 
41 # MSTest test Results 
42 [Tt]est[Rr]esult 
43 [Bb]uild[Ll]og. 
44 
 
45 # NUnit 
46 .VisualState.xml 
47 TestResult.xml 
48 nunit-.xml 
49 
 
50 # Build Results of an ATL Project 
51 [Dd]ebugPS 
52 [Rr]eleasePS 
53 dlldata.c 
54 
 
55 # Benchmark Results 
56 BenchmarkDotNet.Artifacts 
57 
 
58 # .NET Core 
59 project.lock.json 
60 project.fragment.lock.json 
61 artifacts 
62 
 
63 # StyleCop 
64 StyleCopReport.xml 
65 
 
66 # Files built by Visual Studio 
67 _i.c 
68 _p.c 
69 _h.h 
70 .ilk 
71 .meta 
72 .obj 
73 .iobj 
74 .pch 
75 .pdb 
76 .ipdb 
77 .pgc 
78 .pgd 
79 .rsp 
80 .sbr 
81 .tlb 
82 .tli 
83 .tlh 
84 .tmp 
85 .tmp_proj 
86 _wpftmp.csproj 
87 .log 
88 .vspscc 
89 .vssscc 
90 .builds 
91 .pidb 
92 .svclog 
93 .scc 
94 
 
95 # Chutzpah Test files 
96 _Chutzpah 
97 
 
98 # Visual C++ cache files 
99 ipch 
100 .aps 
101 .ncb 
102 .opendb 
103 .opensdf 
104 .sdf 
105 .cachefile 
106 .VC.db 
107 .VC.VC.opendb 
108 
 
109 # Visual Studio profiler 
110 .psess 
111 .vsp 
112 .vspx 
113 .sap 
114 
 
115 # Visual Studio Trace Files 
116 .e2e 
117 
 
118 # TFS 2012 Local Workspace 
119 $tf 
120 
 
121 # Guidance Automation Toolkit 
122 .gpState 
123 
 
124 # ReSharper is a .NET coding add-in 
125 _ReSharper 
126 .[Rr]e[Ss]harper 
127 .DotSettings.user 
128 
 
129 # JustCode is a .NET coding add-in 
130 .JustCode 
131 
 
132 # TeamCity is a build add-in 
133 _TeamCity 
134 
 
135 # DotCover is a Code Coverage Tool 
136 .dotCover 
137 
 
138 # AxoCover is a Code Coverage Tool 
139 .axoCover 
140 !.axoCoversettings.json 
141 
 
142 # Visual Studio code coverage results 
143 .coverage 
144 .coveragexml 
145 
 
146 # NCrunch 
147 _NCrunch_ 
148 .crunch.local.xml 
149 nCrunchTemp_ 
150 
 
151 # MightyMoose 
152 .mm. 
153 AutoTest.Net 
154 
 
155 # Web workbench (sass) 
156 .sass-cache 
157 
 
158 # Installshield output folder 
159 [Ee]xpress 
160 
 
161 # DocProject is a documentation generator add-in 
162 DocProjectbuildhelp 
163 DocProjectHelp.HxT 
164 DocProjectHelp.HxC 
165 DocProjectHelp.hhc 
166 DocProjectHelp.hhk 
167 DocProjectHelp.hhp 
168 DocProjectHelpHtml2 
169 DocProjectHelphtml 
170 
 
171 # Click-Once directory 
172 publish 
173 
 
174 # Publish Web Output 
175 .[Pp]ublish.xml 
176 .azurePubxml 
177 # Note Comment the next line if you want to checkin your web deploy settings, 
178 # but database connection strings (with potential passwords) will be unencrypted 
179 .pubxml 
180 .publishproj 
181 
 
182 # Microsoft Azure Web App publish settings. Comment the next line if you want to 
183 # checkin your Azure Web App publish settings, but sensitive information contained 
184 # in these scripts will be unencrypted 
185 PublishScripts 
186 
 
187 # NuGet Packages 
188 .nupkg 
189 # NuGet Symbol Packages 
190 .snupkg 
191 # The packages folder can be ignored because of Package Restore 
192 [Pp]ackages 
193 # except build, which is used as an MSBuild target. 
194 ![Pp]ackagesbuild 
195 # Uncomment if necessary however generally it will be regenerated when needed 
196 #![Pp]ackagesrepositories.config 
197 # NuGet v3's project.json files produces more ignorable files 
198 .nuget.props 
199 .nuget.targets 
200 
 
201 # Microsoft Azure Build Output 
202 csx 
203 .build.csdef 
204 
 
205 # Microsoft Azure Emulator 
206 ecf 
207 rcf 
208 
 
209 # Windows Store app package directories and files 
210 AppPackages 
211 BundleArtifacts 
212 Package.StoreAssociation.xml 
213 _pkginfo.txt 
214 .appx 
215 .appxbundle 
216 .appxupload 
217 
 
218 # Visual Studio cache files 
219 # files ending in .cache can be ignored 
220 .[Cc]ache 
221 # but keep track of directories ending in .cache 
222 !.[Cc]ache 
223 
 
224 # Others 
225 ClientBin 
226 ~$ 
227 ~ 
228 .dbmdl 
229 .dbproj.schemaview 
230 .jfm 
231 .pfx 
232 .publishsettings 
233 orleans.codegen.cs 
234 
 
235 # Including strong name files can present a security risk 
236 # (httpsgithub.comgithubgitignorepull2483#issue-259490424) 
237 #.snk 
238 
 
239 # Since there are multiple workflows, uncomment next line to ignore bower_components 
240 # (httpsgithub.comgithubgitignorepull1529#issuecomment-104372622) 
241 #bower_components 
242 
 
243 # RIASilverlight projects 
244 Generated_Code 
245 
 
246 # Backup & report files from converting an old project file 
247 # to a newer Visual Studio version. Backup files are not needed, 
248 # because we have git ;-) 
249 _UpgradeReport_Files 
250 Backup 
251 UpgradeLog.XML 
252 UpgradeLog.htm 
253 ServiceFabricBackup 
254 .rptproj.bak 
255 
 
256 # SQL Server files 
257 .mdf 
258 .ldf 
259 .ndf 
260 
 
261 # Business Intelligence projects 
262 .rdl.data 
263 .bim.layout 
264 .bim_.settings 
265 .rptproj.rsuser 
266 - [Bb]ackup.rdl 
267 - [Bb]ackup ([0-9]).rdl 
268 - [Bb]ackup ([0-9][0-9]).rdl 
269 
 
270 # Microsoft Fakes 
271 FakesAssemblies 
272 
 
273 # GhostDoc plugin setting file 
274 .GhostDoc.xml 
275 
 
276 # Node.js Tools for Visual Studio 
277 .ntvs_analysis.dat 
278 node_modules 
279 
 
280 # Visual Studio 6 build log 
281 .plg 
282 
 
283 # Visual Studio 6 workspace options file 
284 .opt 
285 
 
286 # Visual Studio 6 auto-generated workspace file (contains which files were open etc.) 
287 .vbw 
288 
 
289 # Visual Studio LightSwitch build output 
290 .HTMLClientGeneratedArtifacts 
291 .DesktopClientGeneratedArtifacts 
292 .DesktopClientModelManifest.xml 
293 .ServerGeneratedArtifacts 
294 .ServerModelManifest.xml 
295 _Pvt_Extensions 
296 
 
297 # Paket dependency manager 
298 .paketpaket.exe 
299 paket-files 
300 
 
301 # FAKE - F# Make 
302 .fake 
303 
 
304 # CodeRush personal settings 
305 .crpersonal 
306 
 
307 # Python Tools for Visual Studio (PTVS) 
308 __pycache__ 
309 .pyc 
310 
 
311 # Cake - Uncomment if you are using it 
312 # tools 
313 # !toolspackages.config 
314 
 
315 # Tabs Studio 
316 .tss 
317 
 
318 # Telerik's JustMock configuration file 
319 .jmconfig 
320 
 
321 # BizTalk build output 
322 .btp.cs 
323 .btm.cs 
324 .odx.cs 
325 .xsd.cs 
326 
 
327 # OpenCover UI analysis results 
328 OpenCover 
329 
 
330 # Azure Stream Analytics local run output 
331 ASALocalRun 
332 
 
333 # MSBuild Binary and Structured Log 
334 .binlog 
335 
 
336 # NVidia Nsight GPU debugger configuration file 
337 .nvuser 
338 
 
339 # MFractors (Xamarin productivity tool) working folder 
340 .mfractor 
341 
 
342 # Local History for Visual Studio 
343 .localhistory 
344 
 
345 # BeatPulse healthcheck temp database 
346 healthchecksdb 
347 
 
348 # Backup folder for Package Reference Convert tool in Visual Studio 2017 
349 MigrationBackup 
